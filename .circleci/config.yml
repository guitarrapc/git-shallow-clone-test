version: 2.1
orbs:
  git-shallow-clone: guitarrapc/git-shallow-clone@0.2.0
executors:
  dotnet:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      NUGET_XMLDOC_MODE: skip
jobs:
  build-test:
    executor: dotnet
    steps:
      #- git-shallow-clone/checkout_shallow
      - run:
        command: |
          #!/bin/sh
          set -ex
          # Workaround old docker images with incorrect $HOME
          # check https://github.com/docker/docker/issues/2968 for details
          if [ "${HOME}" = "/" ]
          then
            export HOME=$(getent passwd $(id -un) | cut -d: -f6)
          fi

          # known_hosts
          mkdir -p ~/.ssh
          if [ -x "$(command -v ssh-keyscan)" ]
          then
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts
            ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
          else
            echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
          bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
          ' >> ~/.ssh/known_hosts
          fi

          (umask 077; touch ~/.ssh/id_rsa)
          chmod 0600 ~/.ssh/id_rsa
          (cat $CHECKOUT_KEY > ~/.ssh/id_rsa)

          # use git+ssh instead of https
          git config --global url."ssh://git@github.com".insteadOf "https://github.com" || true
          git config --global gc.auto 0 || true

          # checkout
          git clone --depth 1 $CIRCLE_REPOSITORY_URL .

          # Fetch remote and check the commit ID of the checked out code
          if [ -n "$CIRCLE_TAG" ]
          then
            # tag
            git fetch --depth 10 --force origin "refs/tags/${CIRCLE_TAG}"
          elif [[ $(echo $CIRCLE_BRANCH | grep -e ^pull\/*) ]] # sh version of bash `elif [[ "$CIRCLE_BRANCH" =~ ^pull\/* ]]`
          then
            # pull request
            git fetch --depth 10 --force origin "${CIRCLE_BRANCH}/head:remotes/origin/${CIRCLE_BRANCH}"
          else
            # others
            git fetch --depth=10 --force origin "$CIRCLE_BRANCH:remotes/origin/$CIRCLE_BRANCH"
          fi

          # Check the commit ID of the checked out code
          if [ -n "$CIRCLE_TAG" ]
          then
            git reset --hard "$CIRCLE_SHA1"
            git checkout -q "$CIRCLE_TAG"
          elif [ -n "$CIRCLE_BRANCH" ]
          then
            git reset --hard "$CIRCLE_SHA1"
            git checkout -q -B "$CIRCLE_BRANCH"
          fi

          git reset --hard "$CIRCLE_SHA1"

workflows:
  version: 2
  build-and-push:
    jobs:
      - build-test:
          filters:
            tags:
              only: /.*/
